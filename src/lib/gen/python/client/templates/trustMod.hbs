import os

import httpx
from abc import abstractmethod, ABC
from pydantic import BaseModel, ConfigDict
from pydantic.alias_generators import to_camel
from typing import TypeVar, Generic

client = httpx.Client(base_url = os.environ["SERVER_BASE_URL"])

class Dto(BaseModel):
    model_config = ConfigDict(
        alias_generator=to_camel,
        populate_by_name=True,
)

T = TypeVar("T")

class TypeMapping(Generic[T], ABC):
    @classmethod
    @abstractmethod
    def of(cls, t: T) -> 'TypeMapping':
        raise NotImplementedError

    @abstractmethod
    def to(self) -> T:
        raise NotImplementedError
