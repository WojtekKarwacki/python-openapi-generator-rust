paths:
  /experiments:
    get:
      tags:
        - experiment
      operationId: getExperiments
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExperimentSummary"
  /experiments/configs:
    post:
      tags:
        - experiment-config
      operationId: createExperimentConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExperimentConfigRequest'
        required: true
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperimentId'
  /experiments/configs/{experimentConfigId}:
    parameters:
      - name: experimentConfigId
        in: path
        schema:
          $ref: '#/components/schemas/ExperimentId'
        required: true
    get:
      tags:
        - experiment-config
      operationId: getExperimentConfig
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperimentConfig'
  /experiments/{experimentId}:
    parameters:
      - name: experimentId
        in: path
        schema:
          $ref: '#/components/schemas/ExperimentId'
        required: true
    post:
      tags:
        - experiment
      operationId: runExperiment
      responses:
        204:
          description: no content
    get:
      tags:
        - experiment
      operationId: getExperiment
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Experiment"
  /experiments/{experimentId}/best-model:
    get:
      tags:
        - model
      operationId: getBestModel
      parameters:
        - required: true
          schema:
            $ref: '#/components/schemas/ExperimentId'
          name: experimentId
          in: path
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BestModel"
components:
  schemas:
    BestModel:
      oneOf:
        - $ref: '#/components/schemas/BestModelClassification'
        - $ref: '#/components/schemas/BestModelRegression'
      discriminator:
        propertyName: type
        mapping:
          classification: '#/components/schemas/BestModelClassification'
          regression: '#/components/schemas/BestModelRegression'
    BestModelAbstraction:
      type: object
      properties:
        model:
          $ref: 'model.yml#/components/schemas/Model'
        features:
          type: array
          items:
            $ref: '#/components/schemas/BestModelFeature'
        baselineModel:
          $ref: 'model.yml#/components/schemas/Model'
      required:
        - baselineModel
        - model
        - features
    BestModelClassification:
      allOf:
        - $ref: '#/components/schemas/BestModelAbstraction'
        - type: object
          properties:
            thresholdToConfusionMatrix:
              type: array
              items:
                type: object
                properties:
                  threshold:
                    type: number
                    format: double
                  value:
                    $ref: '#/components/schemas/ConfusionMatrix'
                required:
                  - threshold
                  - value
          required:
            - thresholdToConfusionMatrix
      x-dotdata-discriminator: type
    BestModelFeature:
      type: object
      properties:
        feature:
          $ref: 'feature.yml#/components/schemas/FeatureSummary'
        weight:
          type: number
          format: double
      required:
        - feature
        - weight
    BestModelRegression:
      allOf:
        - $ref: '#/components/schemas/BestModelAbstraction'
      x-dotdata-discriminator: type
    ConfusionMatrix:
      type: object
      properties:
        falseNeg:
          type: integer
          format: int64
        falsePos:
          type: integer
          format: int64
        trueNeg:
          type: integer
          format: int64
        truePos:
          type: integer
          format: int64
      required:
        - falseNeg
        - falsePos
        - trueNeg
        - truePos
    CreateExperimentConfigRequest:
      type: object
      properties:
        name:
          type: string
        analyticTables:
          type: array
          items:
            $ref: 'analytic.yml#/components/schemas/AnalyticTable'
        entityRelations:
          type: array
          items:
            $ref: 'entity-relation.yml#/components/schemas/EntityRelation'
        targetConfig:
          $ref: '#/components/schemas/TargetConfig'
        featureEngineeringConfig:
          $ref: '#/components/schemas/FeatureEngineeringConfig'
        machineLearningConfig:
          $ref: '#/components/schemas/CreateMachineLearningConfig'
        mode:
          $ref: '#/components/schemas/ExperimentMode'
        resourceUnits:
          type: integer
          minimum: 2
        timeSeriesConfig:
          $ref: '#/components/schemas/TimeSeriesConfig'
      required:
        - name
        - analyticTables
        - entityRelations
        - featureEngineeringConfig
        - machineLearningConfig
        - targetConfig
        - mode
    ExperimentConfig:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ExperimentId'
        name:
          type: string
        analyticTables:
          type: array
          items:
            $ref: 'analytic.yml#/components/schemas/AnalyticTable'
        entityRelations:
          type: array
          items:
            $ref: 'entity-relation.yml#/components/schemas/EntityRelation'
        targetConfig:
          $ref: '#/components/schemas/TargetConfig'
        featureEngineeringConfig:
          $ref: '#/components/schemas/FeatureEngineeringConfig'
        machineLearningConfig:
          $ref: '#/components/schemas/MachineLearningConfig'
        mode:
          $ref: '#/components/schemas/ExperimentMode'
        resourceUnits:
          type: integer
          minimum: 2
        timeSeriesConfig:
          $ref: '#/components/schemas/TimeSeriesConfig'
      required:
        - id
        - name
        - analyticTables
        - entityRelations
        - featureEngineeringConfig
        - machineLearningConfig
        - targetConfig
        - mode
    Experiment:
      allOf:
        - $ref: 'task.yml#/components/schemas/Task'
        - type: object
          properties:
            stage:
              $ref: '#/components/schemas/ExperimentStage'
          required:
            - stage
    ExperimentId:
      $ref: 'api.yml#/components/schemas/Id'
    ExperimentMode:
      type: string
      default: standard
      enum:
        - quick
        - standard
    ExperimentProgressedEvent:
      oneOf:
        - $ref: '#/components/schemas/ExperimentProgressedEventStarted'
        - $ref: '#/components/schemas/ExperimentProgressedEventAnalyticDbCreated'
        - $ref: '#/components/schemas/ExperimentProgressedEventFeaturesSelected'
        - $ref: '#/components/schemas/ExperimentProgressedEventFeaturesAssessed'
        - $ref: '#/components/schemas/ExperimentProgressedEventMlDone'
        - $ref: '#/components/schemas/ExperimentProgressedEventBestModelInterpreted'
        - $ref: '#/components/schemas/ExperimentProgressedEventBestModelTestPredictionCalculated'
        - $ref: '#/components/schemas/ExperimentProgressedEventFailed'
      discriminator:
        propertyName: type
        mapping:
          started: '#/components/schemas/ExperimentProgressedEventStarted'
          analytic-db-created: '#/components/schemas/ExperimentProgressedEventAnalyticDbCreated'
          features-selected: '#/components/schemas/ExperimentProgressedEventFeaturesSelected'
          features-assessed: '#/components/schemas/ExperimentProgressedEventFeaturesAssessed'
          ml-done: '#/components/schemas/ExperimentProgressedEventMlDone'
          best-model-interpreted: '#/components/schemas/ExperimentProgressedEventBestModelInterpreted'
          best-model-test-prediction-calculated: '#/components/schemas/ExperimentProgressedEventBestModelTestPredictionCalculated'
          failed: '#/components/schemas/ExperimentProgressedEventFailed'
    ExperimentProgressedEventAbstraction:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ExperimentId'
        progress:
          $ref: 'task.yml#/components/schemas/Progress'
      required:
        - id
        - progress
    ExperimentProgressedEventStarted:
      allOf:
        - $ref: '#/components/schemas/ExperimentProgressedEventAbstraction'
      x-dotdata-discriminator: type
    ExperimentProgressedEventAnalyticDbCreated:
      allOf:
        - $ref: '#/components/schemas/ExperimentProgressedEventAbstraction'
      x-dotdata-discriminator: type
    ExperimentProgressedEventFeaturesSelected:
      allOf:
        - $ref: '#/components/schemas/ExperimentProgressedEventAbstraction'
      x-dotdata-discriminator: type
    ExperimentProgressedEventFeaturesAssessed:
      allOf:
        - $ref: '#/components/schemas/ExperimentProgressedEventAbstraction'
      x-dotdata-discriminator: type
    ExperimentProgressedEventMlDone:
      allOf:
        - $ref: '#/components/schemas/ExperimentProgressedEventAbstraction'
      x-dotdata-discriminator: type
    ExperimentProgressedEventBestModelInterpreted:
      allOf:
        - $ref: '#/components/schemas/ExperimentProgressedEventAbstraction'
      x-dotdata-discriminator: type
    ExperimentProgressedEventBestModelTestPredictionCalculated:
      allOf:
        - $ref: '#/components/schemas/ExperimentProgressedEventAbstraction'
      x-dotdata-discriminator: type
    ExperimentProgressedEventFailed:
      allOf:
        - $ref: '#/components/schemas/ExperimentProgressedEventAbstraction'
      x-dotdata-discriminator: type
    ExperimentStage:
        type: string
        enum:
          - starting
          - analytic-db-creation
          - feature-selection
          - feature-assessment
          - machine-learning
          - best-model-interpretation
          - best-model-test-prediction-calculaton
          - completed
    ExperimentSummary:
      allOf:
        - $ref: 'task.yml#/components/schemas/TaskSummary'
        - type: object
          properties:
            id:
              $ref: '#/components/schemas/ExperimentId'
          required:
            - id
    FeatureEngineeringConfig:
      type: object
      properties:
        exploreFeaturesFromTarget:
          type: boolean
        eliminateOutliers:
          type: boolean
      required:
        - exploreFeaturesFromTarget
    CreateMachineLearningConfig:
      type: object
      properties:
        fixImbalance:
          type: boolean
          default: false
        removeOutliers:
          type: boolean
          default: false
        normalize:
          type: boolean
          default: false
        imputeMissingValues:
          type: boolean
          default: false
        numericImputation:
          type: string
          enum:
            - drop
            - mean
            - median
            - mode
            - knn
        categoricalImputation:
          type: string
          enum:
            - drop
            - mode
        models:
            $ref: '#/components/schemas/AvailableModels'
      required:
        - fixImbalance
        - removeOutliers
        - normalize
        - imputeMissingValues
    MachineLearningConfig:
      type: object
      properties:
        fixImbalance:
          type: boolean
          default: false
        removeOutliers:
          type: boolean
          default: false
        normalize:
          type: boolean
          default: false
        imputeMissingValues:
          type: boolean
          default: false
        numericImputation:
          type: string
          enum:
            - drop
            - mean
            - median
            - mode
            - knn
        categoricalImputation:
          type: string
          enum:
            - drop
            - mode
        models:
            $ref: '#/components/schemas/CurrentAndPreviousAvailableModels'
      required:
        - fixImbalance
        - removeOutliers
        - normalize
        - imputeMissingValues
        - models
    AvailableModels:
      type: array
      items:
        type: string
        enum:
          - lr
          - ridge
          - svm
          - lasso
          - en
          - lar
          - llar
          - omp
          - br
          - ard
          - par
          - ransac
          - tr
          - huber
          - kr
          - dt
          - rf
          - et
          - gbc
          - gbr
          - xgboost
          - lightgbm
          - catboost
          - ada
          - knn
          - nb
          - rbfsvm
          - gpc
          - mlp
          - qda
          - lda
    CurrentAndPreviousAvailableModels:
      type: array
      items:
        type: string
        enum:
          - lr
          - ridge
          - svm
          - lasso
          - en
          - lar
          - llar
          - omp
          - br
          - ard
          - par
          - ransac
          - tr
          - huber
          - kr
          - dt
          - rf
          - et
          - gbc
          - gbr
          - xgboost
          - lightgbm
          - catboost
          - ada
          - knn
          - nb
          - rbfsvm
          - gpc
          - mlp
          - qda
          - lda
    TargetConfig:
      type: object
      properties:
        analyticTableId:
          $ref: 'analytic.yml#/components/schemas/AnalyticTableId'
        columnId:
          $ref: 'table.yml#/components/schemas/ColumnId'
        downsample:
          $ref: '#/components/schemas/TargetDownsampleConfig'
        uniqueConstraint:
          type: array
          items:
            $ref: 'table.yml#/components/schemas/ColumnId'
          uniqueItems: true
      required:
        - analyticTableId
        - columnId
        - uniqueConstraint
    TargetDownsampleConfig:
      oneOf:
        - $ref: '#/components/schemas/TargetDownsampleConfigNumber'
        - $ref: '#/components/schemas/TargetDownsampleConfigRatio'
      discriminator:
        propertyName: type
        mapping:
          number: '#/components/schemas/TargetDownsampleConfigNumber'
          ratio: '#/components/schemas/TargetDownsampleConfigRatio'
    TargetDownsampleConfigNumber:
      allOf:
        - type: object
          properties:
            value:
              type: integer
              minimum: 0
              exclusiveMinimum: true
          required:
            - value
      x-dotdata-discriminator: type
    TargetDownsampleConfigRatio:
      allOf:
        - type: object
          properties:
            value:
              type: number
              minimum: 0
              exclusiveMinimum: true
              maximum: 1
              exclusiveMaximum: true
          required:
            - value
      x-dotdata-discriminator: type
    TimeSeriesConfig:
      type: object
      properties:
        predictionTargetTime:
          $ref: 'analytic.yml#/components/schemas/LeadTime'
      required:
        - predictionTargetTime
